


$background: #FFFFFF !default;
$background-inverse: #313638 !default;
$text: #313628 !default;
$text-inverse: #FFFFFF !default;
$text-on-color: #FFFFFF !default;

$primary: #4392F1 !default;
$secondary: #624CAB !default;
$tertiary: #5bc0eb !default;

$error: #DC493A !default;
$success: #44AF69 !default;

$data-viz-1: #63A37F !default;
$data-viz-2: #713E5A !default;
$data-viz-3: #EAC435 !default;
$data-viz-4: #FF6B35 !default;
$data-viz-5: #150578 !default;
$data-viz-6: #CFDEE7 !default;

$default-border-radius: 2px !default;

$height-2xs: 8px !default;
$height-xs: 12px !default;
$height-s: 18px !default;
$height-m: 24px !default;
$height-l: 36px !default;
$height-xl: 40px !default;
$height-2xl: 48px !default;

$screen-s: 480px !default;
$screen-m: 768px !default;
$screen-l: 1048px !default;
$screen-xl: 1440px !default;
$screen-s-max: calc($screen-m - 1);
$screen-m-max: calc($screen-l - 1);
$screen-l-max: calc($screen-xl - 1);

@function str-replace($string, $search, $replace: '') {
   $index: str-index($string, $search);   
   @if $index {
     @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
   }
   @return $string;
 }

@function svg-inline($string){
  $result: str-replace($string, '%', '%25');
  $result: str-replace($result, '#', '%23');
  $result: str-replace($result, '"', '%22');
  $result: str-replace($result, "'", '%27');
  $result: str-replace($result, ' ', '%20');
  $result: str-replace($result, '<', '%3C');
  $result: str-replace($result, '>', '%3E');
  @return $result;
}
@mixin box-sizing($sizing) {
  -webkit-box-sizing: $sizing;
  -moz-box-sizing: $sizing;
  box-sizing: $sizing;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin box-shadow2($shadow1, $shadow2) {
  -webkit-box-shadow: $shadow1, $shadow2;
  -moz-box-shadow: $shadow1, $shadow2;
  box-shadow: $shadow1, $shadow2;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  transition: $transition;
}

@mixin svg-icon($id, $color) {
   @if $id == "add" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M38,12.82,35.18,10,24,21.18,12.82,10,10,12.82,21.18,24,10,35.18,12.82,38,24,26.82,35.18,38,38,35.18,26.82,24Z" transform="translate(0 0)" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "remove" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M38,26H10V22H38Z" style="fill:' + $color + '"/><path d="M0,0H48V48H0Z" style="fill:none"/></svg>'));
   }
   @if $id == "done" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><title>checkmark</title><path d="M18,32.4,9.6,24,6.8,26.8,18,38,42,14l-2.8-2.8Z" transform="translate(0 0)" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "circle" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><circle cx="24" cy="24" r="16" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "up" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M33.18,32,24,22.84,14.82,32,12,29.18l12-12,12,12Z" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "right" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M16.59,33.77l9.16-9.18-9.16-9.18,2.82-2.82,12,12-12,12Z" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "down" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M14.82,17.18,24,26.34l9.18-9.16L36,20,24,32,12,20Z" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "left" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path d="M31.41,15.41l-9.16,9.18,9.16,9.18-2.82,2.82-12-12,12-12Z" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "show" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" style="fill:' + $color + '"/></svg>'));
   }
   @if $id == "hide" {
      background-image: url(svg-inline('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z" fill="none"/><path d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z" style="fill:' + $color + '"/></svg>'));
   }

}

*,
*:before,
*:after {
   @include box-sizing(border-box);
   @include transition(all 200ms);
  font-family: 'Source Sans Pro', sans-serif;
}

input, button, select, textarea {
  outline: none;
}

select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}
option:not(:checked) {
color: black; /* prevent <option>s from becoming transparent as well */
}

@for $i from 1 through 6 {
   h#{$i} {
      font-family: 'Lato', sans-serif;
   }
}

body {
   max-width: 100vw;
   min-height: 100vh;
}

::selection {
   background: $primary;
   color: $text-on-color;
}

.bg {
  background-color: $background;
}

.jf--bg-inverse {
  background-color: $background-inverse;
}

.jf--bg-primary {
  background-color: $primary;
}

.jf--bg-secondary {
  background-color: $secondary;
}

.jf--bg-tertiary {
  background-color: $tertiary;
}

.jf--bg-error {
  background-color: $error;
}

.jf--bg-success {
  background-color: $success;
}

.jf--text {
  color: $text;
}

.jf--text-inverse {
  color: $text-inverse;
}

.jf--text-on-color {
  color: $text-on-color;
}

.jf--section {
  width: 100vw;
  padding: $height-xl;
  @media screen and (max-width: $screen-s-max) {
     padding: $height-s;
  }
  &.jf--no-pad {
     padding: 0;
  }

  &.jf--nearly-full-height {
     min-height: 80vh;
     @media screen and (max-height: $screen-m-max) {
        min-height: $screen-l-max;
     }
  }
  &.jf--full-height {
     min-height: 100vh;
     @media screen and (max-height: $screen-m-max) {
        min-height: $screen-l-max;
     }
  }
  &.jf--padded {
      padding: $height-xl 15%;
      @media screen and (max-width: $screen-m-max) {
          padding: $height-xl;
      }
  }
}

@mixin flex-base {
   display: -webkit-flex;
   display: flex;
}

.jf--row {
   @include flex-base;
   -ms-flex-direction: row;
   flex-direction: row;
   align-items: center;
   justify-content: center;
   flex-wrap: wrap;
   &.jf--no-v-center {
      align-items: stretch;
   }
   &.jf--no-h-center {
      justify-content: flex-start;
   }
   &.jf--full-width {
      justify-content: space-between;
   }
   &.jf--evenly {
      justify-content: space-evenly;
   }
   &.jf--start {
      justify-content: flex-start;
      justify-content: start;
   }
   &.jf--end {
      justify-content: flex-end;
      justify-content: end;
   }
   &.jf--no-wrap {
      flex-wrap: nowrap;
   }
}

.jf--column {
   @include flex-base;
   -ms-flex-direction: column;
   flex-direction: column;
   align-items: center;
   justify-content: center;
   &.jf--no-v-center {
      align-items: stretch;
   }
   &.jf--no-h-center {
      justify-content: flex-start;
   }
   &.jf--full-width {
      justify-content: space-between;
   }
   &.jf--evenly {
      justify-content: space-evenly;
   }
   &.jf--start {
      justify-content: flex-start;
      justify-content: start;
   }
   &.jf--end {
      justify-content: flex-end;
      justify-content: end;
   }
}
@mixin grid-base {

   @for $i from 2 through 12 {
      &.col-#{$i} {
         grid-template-columns: repeat(#{$i}, 1fr);
      }
   }
}

.jf--grid {
   display: -ms-grid;
   display: grid;
   @include grid-base;
}

.jf--inline-grid {
   display: -ms-inline-grid;
   display: inline-grid;
   @include grid-base;
}


.jf--form-item {
  margin: 6px 0;
  position: relative;
  width: 100%;

  & > label {
    display: inline-block;
    height: $height-s;
    width: 100%;
    line-height: $height-s;
    margin-bottom: 6px;
    font-weight: 600;
 }

  @mixin checkbox-size {
   width: 100%;
   height: $height-l;
   line-height: $height-l;
   padding-left: $height-l;
}

&.jf--checkbox-input-wrapper > input[type="checkbox"] {
   display: none;
   & + label {
      display: inline-block;
      position: relative;
      cursor: pointer;
      @include checkbox-size();
   }

   & + label::before {
      position: absolute;
      display: inline-block;
      content: '';
      text-align: center;
      height: $height-s;
      width: $height-s;
      left: 0;
      top: (($height-l - $height-s) / 2);
      border-radius: $default-border-radius;
      border: 1px solid $primary;
      background-color: transparent;
      background-position: center;
      background-size: cover;
   }

   &:checked + label::before {
      background-color: $primary;
      @include svg-icon("add", $text-on-color);
   }

   &.jf--checkmark:checked + label::before {
      @include svg-icon("done", $text-on-color);
   }

   &:indeterminate + label::before {
      background-color: $primary;
      @include svg-icon("remove", $text-on-color);
   }

   &:disabled + label {
      color: rgba($text, 0.4);
   }
   &:disabled + label::before {
      border: 1px solid rgba($text, 0.4);
   }
}

  &.jf--dropdown-wrapper {
   display: -webkit-flex;
   display: flex;
   flex-direction: column;
   align-items: flex-start;

   &.jf--standard > .jf--dropdown {
      background-color: rgba(darken($primary, 5), 0.05);
      border-top-left-radius: $default-border-radius;
      border-top-right-radius: $default-border-radius;
      border: none;
      border-bottom: 1px solid rgba($background-inverse, 0.4);
      &:hover, &:focus {
         border-bottom: 1px solid $primary;
      }
      
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border-bottom: 1px solid $error;
      }
   }

   &.jf--boxed > .jf--dropdown {
      border: 1px solid rgba($background-inverse, 0.1);
      border-radius: $default-border-radius;

      &:hover {
         border: 1px solid rgba($background-inverse, 0.4);
      }

      &:focus {
         border: 1px solid rgba($primary, 0.8);
      }
      
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border: 1px solid rgba($error, 0.8);
      }
   }
   & > .jf--dropdown {
      width: 100%;
      line-height: $height-m;
      padding: $height-2xs $height-xs;
      padding-right: $height-2xl;
      position: relative;
      &::before {
         content: '';
         display: inline-block;
         position: absolute;
         height: $height-m;
         width: $height-m;
         background-size: contain;
         background-position: center;
         background-repeat: no-repeat;
         @include svg-icon("down", $text);
         right: $height-xs;
         bottom: $height-2xs;
         z-index: 1;
         pointer-events: none;
      }

      & > .jf--dropdown-item-wrapper {
         display: none;
         @include box-shadow2(0 4px 6px rgba(0,0,0,0.25), 0 4px 4px rgba(0,0,0,0.22));
         flex-direction: column;
         align-items: flex-start;
         position: absolute;
         top: $height-xl;
         left: 0;
         width: 100%;
         min-height: $height-xl;
         max-height: 200px;
         z-index: 100;
         background-color: $background;
         & > .jf--dropdown-item {
            width: 100%;
            height: $height-l;
            line-height: $height-l;
            padding: 0 $height-xs 0 $height-2xl;
            &:hover {
               background-color: rgba($primary, 0.2);
               cursor: pointer;
            }
         }
      }
      &.jf--visible {

         &.jf--boxed {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
         }
         & > .jf--dropdown-item-wrapper {
            display: -webkit-flex;
            display: flex;
         }
      }
   }

   &.jf--boxed > .jf--dropdown {
      &.jf--visible {
         border-bottom-left-radius: 0;
         border-bottom-right-radius: 0;
      }
   }
}
  
& {
   display: -webkit-flex;
   display: flex;
   flex-direction: column;
   align-items: flex-start;

   &.jf--standard > input[type="text"],
   &.jf--standard > textarea,
   &.jf--standard > input[type="email"],
   &.jf--standard > input[type="password"],
   &.jf--standard > input[type="date"],
   &.jf--standard > input[type="time"] {
      width: 100%;
      line-height: $height-m;
      padding: $height-2xs $height-xs;
      background-color: rgba(darken($primary, 5), 0.05);
      border-top-left-radius: $default-border-radius;
      border-top-right-radius: $default-border-radius;
      border: none;
      border-bottom: 1px solid rgba($background-inverse, 0.4);
      &:hover, &:focus {
         border-bottom: 1px solid $primary;
      }
      
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border-bottom: 1px solid $error;
      }
   }

   &.jf--boxed > input[type="text"],
   &.jf--boxed > textarea,
   &.jf--boxed > input[type="email"],
   &.jf--boxed > input[type="password"],
   &.jf--boxed > input[type="date"],
   &.jf--boxed > input[type="time"] {
      width: 100%;
      line-height: $height-m;
      padding: $height-2xs $height-xs;
      border: 1px solid rgba($background-inverse, 0.1);
      border-radius: $default-border-radius;

      &:hover {
         border: 1px solid rgba($background-inverse, 0.4);
      }

      &:focus {
         border: 1px solid rgba($primary, 0.8);
      }
      
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border: 1px solid rgba($error, 0.8);
      }
   }

   &.jf--pwd-wrapper {
      .jf--pwd-show-btn {
         position: absolute;
         display: block;
         bottom: $height-2xs;
         height: $height-m;
         width: $height-m;
         right: $height-xs;
         z-index: 1;
         background-size: cover;
         background-position: center;
         background-repeat: no-repeat;
         @include svg-icon("show", $text);
         cursor: pointer;
         &.jf--visible {
            @include svg-icon("hide", $text);
         }
      }
   }
   & > textarea {
      min-height: $height-2xl;
      resize: vertical;
   }
}

  @mixin radio-size {
   width: 100%;
   height: $height-l;
   line-height: $height-l;
   padding-left: $height-l;
}

&.jf--radio-input-wrapper > input[type="radio"].jf--radio {
   display: none;
   
   & + label {
      display: inline-block;
      position: relative;
      cursor: pointer;
      @include radio-size();
   }

   & + label::before {
      position: absolute;
      display: inline-block;
      content: '';
      text-align: center;
      height: $height-s;
      width: $height-s;
      left: 0;
      top: (($height-l - $height-s) / 2);
      border-radius: ($height-s / 2);
      border: 1px solid $primary;
      background-color: transparent;
      background-position: center;
      background-size: cover;
   }

   &:checked + label::before {
      @include svg-icon("circle", $primary);
   }
   
   &:disabled + label {
      color: rgba($text, 0.4);
   }
   &:disabled + label::before {
      border: 1px solid rgba($text, 0.4);
   }
}
  &.jf--select-wrapper {
   display: -webkit-flex;
   display: flex;
   flex-direction: column;
   align-items: flex-start;
   position: relative;

   &.jf--standard > select {
      appearance: none;
      border: none;
      &::-ms-expand {
         display: none;
      }
      width: 100%;
      line-height: $height-m;
      padding: $height-2xs $height-xs;
      padding-right: $height-2xl;
      background-color: rgba(darken($primary, 5), 0.05);
      border-top-left-radius: $default-border-radius;
      border-top-right-radius: $default-border-radius;
      border: none;
      border-bottom: 1px solid rgba($background-inverse, 0.4);
      &:hover, &:focus {
         border-bottom: 1px solid $primary;
      }
   
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border-bottom: 1px solid $error;
      }
   }

   &.jf--boxed > select {
      appearance: none;
      border: none;
      &::-ms-expand {
         display: none;
      }
      width: 100%;
      line-height: $height-m;
      padding: $height-2xs $height-xs;
      padding-right: $height-2xl;

      border: 1px solid rgba($background-inverse, 0.1);
      border-radius: $default-border-radius;

      &:hover {
         border: 1px solid rgba($background-inverse, 0.4);
      }

      &:focus {
         border: 1px solid rgba($primary, 0.8);
      }
      
      &.error, &:invalid, &:-moz-submit-invalid, &:-moz-ui-invalid {
         box-shadow: none;
         border: 1px solid rgba($error, 0.8);
      }
   }

   &::before {
      content: '';
      display: inline-block;
      position: absolute;
      height: 24px;
      width: 24px;
      background-size: contain;
      background-position: center;
      background-repeat: no-repeat;
      @include svg-icon("down", $text);
      right: 12px;
      bottom: 8px;
      z-index: 1;
      pointer-events: none;
   }
}
}

@mixin btn-color($background, $text) {
   background-color: $background;
   color: $text;
   border-bottom: 2px solid darken($background, 20);
   &:hover, &:focus {
      background-color: darken($background, 10);
   }

   &.jf--disabled {
      background-color: lighten($background-inverse, 50);
      color: rgba($text-inverse, 0.8);
      border-bottom: 2px solid darken(lighten($background-inverse, 50), 20);
      cursor: not-allowed;
   }

   &.jf--bordered {
      background-color: rgba($background, 0.1);
      border: 1px solid $background;
      color: $background;
      @include box-shadow(none);

      &:hover, &:focus {
         background-color: $background;
         color: $text;
      }

      &.jf--disabled {
         background-color: rgba(lighten($background-inverse, 50), 0.1);
         border: 1px solid lighten($background-inverse, 50);
         color: rgba(lighten($background-inverse, 50), 0.8);
         cursor: not-allowed;
      }
   }

}

.jf--btn {
   @include box-sizing(content-box);
   @include box-shadow(0 0 2px 0 rgba($background-inverse, 0.75));
   
   display: inline-block;
   font-weight: 600;
   height: $height-2xl;
   padding: 0 16px;
   margin: 8px 16px;
   line-height: $height-2xl;
   text-align: center;
   border-radius: $default-border-radius;
   border: 1px solid transparent;
   cursor: pointer;
   white-space: nowrap;
   &.jf--slim {
      height: $height-l;
      line-height: $height-l;
   }

   &.jf--primary {
      @include btn-color($primary, $text-on-color);
   }
   &.jf--secondary {
      @include btn-color($secondary, $text-on-color);
   }
   &.jf--tertiary {
      @include btn-color($tertiary, $text-on-color);
   }
   &.jf--error {
      @include btn-color($error, $text-on-color);
   }
   &.jf--success {
      @include btn-color($success, $text-on-color);
   }
   &.jf--inverse-primary {
      @include btn-color($text-on-color, $primary);
   }
   &.jf--inverse-secondary {
      @include btn-color($text-on-color, $secondary);
   }
   &.jf--inverse-tertiary {
      @include btn-color($text-on-color, $tertiary);
   }
   &.jf--inverse-error {
     @include btn-color($text-on-color, $error);
   }
   &.jf--inverse-success {
     @include btn-color($text-on-color, $success);
   }
}
.jf--card {
   background-color: $background;
   border-radius: $default-border-radius;
   margin: 16px;
   padding: 16px;
   @include box-shadow(0 0 2px 0 rgba($background-inverse, 0.75));
   &.jf--with-hover:hover, &.jf--with-hover:focus {
      @include box-shadow(0 0 4px 0 rgba($background-inverse, 0.75));
   }

   &.jf--with-btn {
      display: flex;
      flex-direction: column;
      justify-content: center;
      padding: 0;
      .jf--card-content {
         flex-grow: 1;
         width: 100%;
         padding: 16px;
      }

      .jf--card-btn {
         display: inline-block;
         font-weight: 600;
         height: $height-2xl;
         line-height: $height-2xl;
         text-align: center;
         width: 100%;
         color: $primary;
         border-top: 1px solid rgba($background-inverse, 0.2);
         &:hover {
            cursor: pointer;
            background-color: $primary;
            color: $text-on-color;
         }
         &.jf--secondary {
            color: $secondary;
            &:hover {
               background-color: $secondary;
               color: $text-on-color;
            }
         }
         &.jf--tertiary {
            color: $tertiary;
            &:hover {
               background-color: $tertiary;
               color: $text-on-color;
            }
         }
      }
   }

   &.jf--primary {
      background-color: $primary;
      color: $text-on-color; 
      *, &.jf--with-btn .jf--card-btn {
         color: $text-on-color; 
      }

      &.jf--with-btn .jf--card-btn {
         border-top: 1px solid rgba($text-on-color, 0.2);
         &:hover {
            background-color: $background;
            color: $primary;
         }
      }
   }

   &.jf--secondary {
      background-color: $secondary;
      color: $text-on-color; 
      *, &.jf--with-btn .jf--card-btn {
         color: $text-on-color; 
      }

      &.jf--with-btn .jf--card-btn {
         border-top: 1px solid rgba($text-on-color, 0.2);
         &:hover {
            background-color: $background;
            color: $secondary;
         }
      }
   }

   &.jf--tertiary {
      background-color: $tertiary;
      color: $text-on-color; 
      *, &.jf--with-btn .jf--card-btn {
        color: $text-on-color; 
      }
      
      &.jf--with-btn .jf--card-btn {
         border-top: 1px solid rgba($text-on-color, 0.2);
         &:hover {
            background-color: $background;
            color: $tertiary;
         }
      }
   }
}
table.jf--table {
   border-collapse: collapse;
   &.jf--full-width {
      width: 100%;
   }
   tr {
      padding: 0;
      border: 1px solid rgba($background-inverse, 0.4);
      &:nth-child(odd) {
         td {
            background-color: rgba($background-inverse, 0.1);
         }
      }
   }

   td, th {
      padding: 6px;
      line-height: $height-m;
      text-align: left;
      &.jf--checkbox {
         padding-top: 0;
         padding-bottom: 0;
         width: $height-2xl;
         .jf--form-item {
            margin: 0;
            height: $height-l; 
            label {
               margin: 0;
            }
         }
      }
   }

} 
@mixin tag-mixin($color) {
   background-color: rgba($color, 0.4);
   &:hover, &.jf--selected {
      background-color: rgba($color, 0.8);
   }
}

.jf--tag {
   display: inline-block;
   height: $height-s;
   line-height: $height-s;
   padding: 0 6px;
   margin: 0 6px;
   font-size: 11px;
   border-radius: 9px;
   text-align: center;
   cursor: pointer;
   @include tag-mixin($primary);
   
   &.jf--data-viz-1 {
      @include tag-mixin($data-viz-1);
   }

   &.jf--data-viz-2 {
      @include tag-mixin($data-viz-2);
   }

   &.jf--data-viz-3 {
      @include tag-mixin($data-viz-3);
   }

   &.jf--data-viz-4 {
      @include tag-mixin($data-viz-4);
   }

   &.jf--data-viz-5 {
      @include tag-mixin($data-viz-5);
   }
   
   &.jf--data-viz-6 {
      @include tag-mixin($data-viz-6);
   }

}